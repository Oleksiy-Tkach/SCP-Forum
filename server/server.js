// server.js - Повний приклад бекенд-сервера з налаштованим CORS

// Імпортуємо необхідні бібліотеки
const express = require('express');
const cors = require('cors');

// Створюємо екземпляр Express-додатку
const app = express();

// Встановлюємо порт для сервера. Використовуємо змінну середовища PORT,
// або 5000 за замовчуванням.
const PORT = process.env.PORT || 5000;

// =======================================================
// Налаштування CORS
// =======================================================
// Використовуємо middleware cors. Це дозволить вашому фронтенду,
// який працює на іншому домені (наприклад, localhost:3000),
// надсилати запити до цього бекенду.
//
// Для розробки, як зараз, можна дозволити всім доменам (*)
// access-control-allow-origin: *
app.use(cors());

// =======================================================
// Додаємо middleware для обробки JSON-тіла запитів
// =======================================================
app.use(express.json());

// =======================================================
// Тестовий маршрут (GET)
// =======================================================
// Цей маршрут повертає просте JSON-повідомлення, яке
// ви можете викликати з вашого фронтенду, щоб перевірити,
// чи працює з'єднання.
app.get('/api/data', (req, res) => {
    // Встановлюємо статус 200 (OK) і надсилаємо JSON-об'єкт
    res.status(200).json({
        message: "Дані успішно отримано від бекенд-сервера!",
        status: "success"
    });
});

// =======================================================
// Запускаємо сервер
// =======================================================
app.listen(PORT, () => {
    console.log(`Сервер успішно запущено на порті ${PORT}`);
    console.log(`Зараз можна перевірити роботу, надіславши запит на http://localhost:${PORT}/api/data`);
});

